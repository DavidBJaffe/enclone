
A single command was used to generate a file per_cell_stuff that was used by other commands:

enclone BCR=@test BUILT_IN CHAINS_EXACT=2 CHAINS=2 NOPRINT POUT=stdout PCELL PCOLS=donors_cell,v_name1,v_name2,dref,cdr3_aa1,cdr3_aa2, jun_mat,jun_sub,jun_ins,hcomp,d1_name1,vj_aa_nl1,vj_aa_nl2 > per_cell_stuff

▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

RUNNING OLGA

#!/usr/bin/env bash
conda activate olga
olga-generate_sequences --humanIGH -n 1408939 --seed=42 -d ',' -o hpgen_sim.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=100 -d ',' -o hpgen_sim_r1.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=200 -d ',' -o hpgen_sim_r2.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=300 -d ',' -o hpgen_sim_r3.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=400 -d ',' -o hpgen_sim_r4.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=500 -d ',' -o hpgen_sim_r5.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=600 -d ',' -o hpgen_sim_r6.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=700 -d ',' -o hpgen_sim_r7.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=800 -d ',' -o hpgen_sim_r8.csv
olga-generate_sequences --humanIGH -n 1408939 --seed=900 -d ',' -o hpgen_sim_r9.csv

▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

FIGURE 1

public_light_chain_analysis per_cell_stuff
 
FIGURE 2 

private_light_chain_analysis per_cell_stuff

FIGURE 3 

(a) enclone BCR=@test MIN_GROUP_DONORS=2 SUMMARY MIN_CHAINS_EXACT=2 CHAINS=2 
GROUP=v_heavy_refname,cdr3_heavy_len,cdr3_aa_heavy≥90% BUILT_IN NOPRINT KEEP_CLONO_IF_CELL_MIN=”dref>0”

with several values substituted for 90.

(b)
enclone PRE=enclone/datasets,repos/enclone,repos/enclone-data/big_inputs/version15/phad META=enclone_core/src/test_def.meta,phad.56.meta GROUP=v_heavy_refname,cdr3_heavy_len,cdr3_aa_heavy≥90% MIN_CHAINS_EXACT=2 CHAINS=2 ECHOC BUILT_IN KEEP_CLONO_IF_CELL_MIN="dref>0" LVARSP=donors,dref AMINO=cdr3 GROUP_CDR3=CIKDILPGGADSW POUT=stdout PCELL PCOLS=cdr3_aa1,cdr3_aa2,v_name2,j_name2 HONEY=out=efs/results/plot.90.six.CIKDILPGGADSW.full.svg,color=catvar,v_name2+donors_cell,maxcat:20

which generated a plot of cells as plot.svg and generated CDR3 values as standard output, from 
which the logo plots were created.

The PRE argument would need to be adjusted, depending on the location of one's data.

FIGURE 4

(a) is from enclone BCR=@test3 CDR3=CARDGGYGSGSYDAFDIW BUILT_IN JALIGN1

(b-e) are from:

insertion_analysis per_cell_stuff
public_light_chain_analysis per_cell_stuff
olga_splice hpgen_sim.csv
where hpgen_sim.csv is the file produced by OLGA (the first one produced above)

▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

LIGHT CHAIN COHERENCE CALCULATED INSTEAD USING FLOW DEFINITIONS OF NAIVE AND MEMORY

public_light_chain_analysis per_cell_stuff FLOW

▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
 
EXTENDED TABLE 1

public_light_chain_analysis per_cell_stuff NAIVE

▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

EXTENDED FIGURE 1

public_light_chain_analysis per_cell_stuff REVERSE

EXTENDED FIGURE 2

public_light_chain_analysis per_cell_stuff NO_PARALOGS

EXTENDED FIGURE 3

hl_similarity per_cell_stuff

EXTENDED FIGURE 4

light_chain_coherence per_cell_stuff

EXTENDED FIGURE 5

insertion_analysis per_cell_stuff

For all other figures see the R scripts in ./src/vis.
